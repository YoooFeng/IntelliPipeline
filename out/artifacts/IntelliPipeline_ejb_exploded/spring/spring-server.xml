<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:mvc="http://www.springframework.org/schema/c"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context.xsd
	http://www.springframework.org/schema/tx
	http://www.springframework.org/schema/tx/spring-tx.xsd
	http://www.springframework.org/schema/aop
	http://www.springframework.org/schema/aop/spring-aop.xsd">

    <!-- 扫描所有使用注解的类型 -->
    <context:component-scan base-package="com.iscas.yf.IntelliPipeline">
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller" />
    </context:component-scan>

    <aop:aspectj-autoproxy />

    <!--Configure the multipart resolver-->
    <bean id="multipartResolver"
          class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <!--one of properties available; the maximum file size in bytes 2G-->
        <property name="maxUploadSize" value="200000000" />
    </bean>


    <!-- spring拦截器, 拦截用户的请求并进行相应的处理 -->
    <!-- 使用bean定义一个Interceptor, 直接定义在mvc:interceptors根下面的Interceptor将拦截所有请求 -->
    <!--<bean class="com.iscas.yf.IntelliPipeline.common.service.user.security.authorization.GudgeonHandlerInterceptor"></bean>-->
    <!--<mvc:interceptor>-->
        <!--<mvc:mapping path="/project_data/**" />-->
        <!--<mvc:mapping path="/views/**" />-->
        <!--<bean class="com.iscas.yf.IntelliPipeline.common.service.user.security.authorization.AuthenticationHandlerInterceptor" />-->
    <!--</mvc:interceptor>-->

</beans>